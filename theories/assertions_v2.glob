DIGEST afcd078f011ad238654f3f28d1ae5f41
Fproject.assertions_v2
R15:22 project.examples <> <> lib
R40:46 project.partial <> <> lib
R64:71 project.commands <> <> lib
R98:106 Coq.Sets.Ensembles <> <> lib
R133:162 Coq.Logic.FunctionalExtensionality <> <> lib
def 178:186 <> assertion
R194:210 project.commands <> exec_model_consts rec
binder 189:190 <> Ex:1
R226:229 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R216:216 project.commands <> M proj
R218:219 project.assertions_v2 <> Ex:1 var
R221:225 project.commands <> state def
def 315:326 <> ceval_lifted
R334:350 project.commands <> exec_model_consts rec
binder 329:330 <> Ex:2
R360:376 project.commands <> exec_model_theory rec
R378:379 project.assertions_v2 <> Ex:2 var
binder 354:356 <> Ext:3
R389:391 project.commands <> com ind
R393:394 project.assertions_v2 <> Ex:2 var
binder 385:385 <> c:4
R403:403 project.commands <> M proj
R405:406 project.assertions_v2 <> Ex:2 var
R408:412 project.commands <> state def
binder 398:399 <> st:5
R420:423 project.commands <> bind proj
R432:436 project.commands <> ceval def
R438:439 project.assertions_v2 <> Ex:2 var
R441:443 project.assertions_v2 <> Ext:3 var
R445:445 project.assertions_v2 <> c:4 var
R428:429 project.assertions_v2 <> st:5 var
R425:426 project.assertions_v2 <> Ex:2 var
def 461:474 <> outcome_triple
R482:498 project.commands <> exec_model_consts rec
binder 477:478 <> Ex:6
R508:524 project.commands <> exec_model_theory rec
R526:527 project.assertions_v2 <> Ex:6 var
binder 502:504 <> Ext:7
R539:547 project.assertions_v2 <> assertion def
R549:550 project.assertions_v2 <> Ex:6 var
binder 533:535 <> phi:8
R558:560 project.commands <> com ind
R562:563 project.assertions_v2 <> Ex:6 var
binder 554:554 <> c:9
R573:581 project.assertions_v2 <> assertion def
R583:584 project.assertions_v2 <> Ex:6 var
binder 567:569 <> psi:10
R605:605 project.commands <> M proj
R607:608 project.assertions_v2 <> Ex:6 var
R610:614 project.commands <> state def
binder 601:601 <> m:11
R625:628 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R620:622 project.assertions_v2 <> phi:8 var
R624:624 project.assertions_v2 <> m:11 var
R629:631 project.assertions_v2 <> psi:10 var
R634:645 project.assertions_v2 <> ceval_lifted def
R647:648 project.assertions_v2 <> Ex:6 var
R650:652 project.assertions_v2 <> Ext:7 var
R654:654 project.assertions_v2 <> c:9 var
R656:656 project.assertions_v2 <> m:11 var
R765:778 project.assertions_v2 <> outcome_triple def
not 732:732 <> ::OL_scope:'<'_x_'>'_x_x_x_'<'_x_'>'
def 940:942 <> Top
R950:966 project.commands <> exec_model_consts rec
binder 945:946 <> Ex:12
R971:979 project.assertions_v2 <> assertion def
R981:982 project.assertions_v2 <> Ex:12 var
R999:999 project.commands <> M proj
R1001:1002 project.assertions_v2 <> Ex:12 var
R1004:1008 project.commands <> state def
binder 995:995 <> m:13
R1014:1017 Coq.Init.Logic <> True ind
def 1032:1034 <> Bot
R1042:1058 project.commands <> exec_model_consts rec
binder 1037:1038 <> Ex:14
R1063:1071 project.assertions_v2 <> assertion def
R1073:1074 project.assertions_v2 <> Ex:14 var
R1091:1091 project.commands <> M proj
R1093:1094 project.assertions_v2 <> Ex:14 var
R1096:1100 project.commands <> state def
binder 1087:1087 <> m:15
R1106:1110 Coq.Init.Logic <> False ind
def 1125:1130 <> T_plus
R1138:1154 project.commands <> exec_model_consts rec
binder 1133:1134 <> Ex:16
R1159:1167 project.assertions_v2 <> assertion def
R1169:1170 project.assertions_v2 <> Ex:16 var
R1186:1186 project.commands <> M proj
R1188:1189 project.assertions_v2 <> Ex:16 var
R1191:1195 project.commands <> state def
binder 1182:1182 <> m:17
R1202:1204 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1201:1201 project.assertions_v2 <> m:17 var
R1205:1206 project.commands <> id proj
R1208:1209 project.assertions_v2 <> Ex:16 var
R1211:1215 project.commands <> state def
def 1230:1234 <> AndOC
R1242:1258 project.commands <> exec_model_consts rec
binder 1237:1238 <> Ex:18
R1269:1277 project.assertions_v2 <> assertion def
R1279:1280 project.assertions_v2 <> Ex:18 var
binder 1263:1263 <> P:19
binder 1265:1265 <> Q:20
R1285:1293 project.assertions_v2 <> assertion def
R1295:1296 project.assertions_v2 <> Ex:18 var
R1312:1312 project.commands <> M proj
R1314:1315 project.assertions_v2 <> Ex:18 var
R1317:1321 project.commands <> state def
binder 1308:1308 <> m:21
R1330:1333 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R1327:1327 project.assertions_v2 <> P:19 var
R1329:1329 project.assertions_v2 <> m:21 var
R1334:1334 project.assertions_v2 <> Q:20 var
R1336:1336 project.assertions_v2 <> m:21 var
def 1351:1354 <> OrOC
R1362:1378 project.commands <> exec_model_consts rec
binder 1357:1358 <> Ex:22
R1389:1397 project.assertions_v2 <> assertion def
R1399:1400 project.assertions_v2 <> Ex:22 var
binder 1383:1383 <> P:23
binder 1385:1385 <> Q:24
R1405:1413 project.assertions_v2 <> assertion def
R1415:1416 project.assertions_v2 <> Ex:22 var
R1432:1432 project.commands <> M proj
R1434:1435 project.assertions_v2 <> Ex:22 var
R1437:1441 project.commands <> state def
binder 1428:1428 <> m:25
R1450:1453 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R1447:1447 project.assertions_v2 <> P:23 var
R1449:1449 project.assertions_v2 <> m:25 var
R1454:1454 project.assertions_v2 <> Q:24 var
R1456:1456 project.assertions_v2 <> m:25 var
def 1471:1475 <> OPlus
R1483:1499 project.commands <> exec_model_consts rec
binder 1478:1479 <> Ex:26
R1509:1517 project.assertions_v2 <> assertion def
R1519:1520 project.assertions_v2 <> Ex:26 var
binder 1503:1503 <> P:27
binder 1505:1505 <> Q:28
R1525:1533 project.assertions_v2 <> assertion def
R1535:1536 project.assertions_v2 <> Ex:26 var
R1553:1553 project.commands <> M proj
R1555:1556 project.assertions_v2 <> Ex:26 var
R1558:1562 project.commands <> state def
binder 1549:1549 <> m:29
R1568:1575 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R1597:1601 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R1584:1584 project.commands <> M proj
R1586:1587 project.assertions_v2 <> Ex:26 var
R1589:1593 project.commands <> state def
binder 1576:1577 <> m1:30
R1584:1584 project.commands <> M proj
R1586:1587 project.assertions_v2 <> Ex:26 var
R1589:1593 project.commands <> state def
binder 1579:1580 <> m2:31
binder 1596:1596 <> H:32
R1631:1634 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R1627:1629 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1602:1603 project.partial <> ap def
R1626:1626 project.assertions_v2 <> H:32 var
R1623:1624 project.assertions_v2 <> m2:31 var
R1620:1621 project.assertions_v2 <> m1:30 var
R1606:1608 project.commands <> bop proj
R1610:1611 project.assertions_v2 <> Ex:26 var
R1613:1617 project.commands <> state def
R1630:1630 project.assertions_v2 <> m:29 var
R1639:1642 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R1635:1635 project.assertions_v2 <> P:27 var
R1637:1638 project.assertions_v2 <> m1:30 var
R1643:1643 project.assertions_v2 <> Q:28 var
R1645:1646 project.assertions_v2 <> m2:31 var
def 1661:1669 <> ImpliesOC
R1677:1693 project.commands <> exec_model_consts rec
binder 1672:1673 <> Ex:33
R1703:1711 project.assertions_v2 <> assertion def
R1713:1714 project.assertions_v2 <> Ex:33 var
binder 1697:1697 <> P:34
binder 1699:1699 <> Q:35
R1719:1727 project.assertions_v2 <> assertion def
R1729:1730 project.assertions_v2 <> Ex:33 var
R1746:1746 project.commands <> M proj
R1748:1749 project.assertions_v2 <> Ex:33 var
R1751:1755 project.commands <> state def
binder 1742:1742 <> m:36
R1773:1773 project.commands <> M proj
R1775:1776 project.assertions_v2 <> Ex:33 var
R1778:1782 project.commands <> state def
binder 1769:1770 <> m':37
R1792:1795 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1787:1789 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1786:1786 project.assertions_v2 <> m:36 var
R1790:1791 project.assertions_v2 <> m':37 var
R1800:1803 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1796:1796 project.assertions_v2 <> P:34 var
R1798:1799 project.assertions_v2 <> m':37 var
R1804:1804 project.assertions_v2 <> Q:35 var
R1806:1807 project.assertions_v2 <> m':37 var
def 1822:1831 <> AtomicAssn
R1839:1855 project.commands <> exec_model_consts rec
binder 1834:1835 <> Ex:38
R1873:1876 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1863:1863 project.commands <> M proj
R1865:1866 project.assertions_v2 <> Ex:38 var
R1868:1872 project.commands <> state def
binder 1859:1859 <> P:39
R1885:1893 project.assertions_v2 <> assertion def
R1895:1896 project.assertions_v2 <> Ex:38 var
R1912:1912 project.commands <> M proj
R1914:1915 project.assertions_v2 <> Ex:38 var
R1917:1921 project.commands <> state def
binder 1908:1908 <> m:40
R1927:1927 project.assertions_v2 <> P:39 var
R1929:1929 project.assertions_v2 <> m:40 var
ind 1974:1977 <> rule
constr 2182:2189 <> one_rule
constr 2251:2258 <> seq_rule
constr 2422:2431 <> split_rule
constr 2619:2628 <> empty_rule
constr 2695:2703 <> true_rule
constr 2795:2804 <> false_rule
constr 2895:2910 <> consequence_rule
constr 3187:3201 <> plus_rule_total
constr 3425:3433 <> plus_rule
R1985:2001 project.commands <> exec_model_consts rec
binder 1980:1981 <> Ex:41
R2011:2027 project.commands <> exec_model_theory rec
R2029:2030 project.assertions_v2 <> Ex:41 var
binder 2005:2007 <> Ext:42
R2037:2037 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2050:2054 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2038:2046 project.assertions_v2 <> assertion def
R2055:2055 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2062:2066 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2056:2058 project.commands <> com ind
R2067:2067 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2080:2084 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2068:2076 project.assertions_v2 <> assertion def
R2205:2213 project.assertions_v2 <> assertion def
R2215:2216 project.assertions_v2 <> Ex:41 var
binder 2201:2201 <> P:45
R2220:2223 project.assertions_v2 <> rule:43 ind
R2245:2245 project.assertions_v2 <> P:45 var
R2235:2239 project.commands <> CSkip constr
R2241:2242 project.assertions_v2 <> Ex:41 var
R2232:2232 project.assertions_v2 <> P:45 var
R2228:2230 project.assertions_v2 <> Ext:42 var
R2225:2226 project.assertions_v2 <> Ex:41 var
R2278:2286 project.assertions_v2 <> assertion def
R2288:2289 project.assertions_v2 <> Ex:41 var
binder 2270:2270 <> P:46
binder 2272:2272 <> Q:47
binder 2274:2274 <> R:48
R2301:2303 project.commands <> com ind
R2305:2306 project.assertions_v2 <> Ex:41 var
binder 2293:2294 <> c1:49
binder 2296:2297 <> c2:50
R2344:2347 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2326:2329 project.assertions_v2 <> rule:43 ind
R2343:2343 project.assertions_v2 <> Q:47 var
R2340:2341 project.assertions_v2 <> c1:49 var
R2338:2338 project.assertions_v2 <> P:46 var
R2334:2336 project.assertions_v2 <> Ext:42 var
R2331:2332 project.assertions_v2 <> Ex:41 var
R2366:2385 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2348:2351 project.assertions_v2 <> rule:43 ind
R2365:2365 project.assertions_v2 <> R:48 var
R2362:2363 project.assertions_v2 <> c2:50 var
R2360:2360 project.assertions_v2 <> Q:47 var
R2356:2358 project.assertions_v2 <> Ext:42 var
R2353:2354 project.assertions_v2 <> Ex:41 var
R2386:2389 project.assertions_v2 <> rule:43 ind
R2416:2416 project.assertions_v2 <> R:48 var
R2401:2404 project.commands <> CSeq constr
R2406:2407 project.assertions_v2 <> Ex:41 var
R2409:2410 project.assertions_v2 <> c1:49 var
R2412:2413 project.assertions_v2 <> c2:50 var
R2398:2398 project.assertions_v2 <> P:46 var
R2394:2396 project.assertions_v2 <> Ext:42 var
R2391:2392 project.assertions_v2 <> Ex:41 var
R2457:2465 project.assertions_v2 <> assertion def
R2467:2468 project.assertions_v2 <> Ex:41 var
binder 2443:2444 <> P1:51
binder 2446:2447 <> Q1:52
binder 2449:2450 <> P2:53
binder 2452:2453 <> Q2:54
R2476:2478 project.commands <> com ind
R2480:2481 project.assertions_v2 <> Ex:41 var
binder 2472:2472 <> c:55
R2522:2525 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2503:2506 project.assertions_v2 <> rule:43 ind
R2520:2521 project.assertions_v2 <> Q1:52 var
R2518:2518 project.assertions_v2 <> c:55 var
R2515:2516 project.assertions_v2 <> P1:51 var
R2511:2513 project.assertions_v2 <> Ext:42 var
R2508:2509 project.assertions_v2 <> Ex:41 var
R2545:2566 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2526:2529 project.assertions_v2 <> rule:43 ind
R2543:2544 project.assertions_v2 <> Q2:54 var
R2541:2541 project.assertions_v2 <> c:55 var
R2538:2539 project.assertions_v2 <> P2:53 var
R2534:2536 project.assertions_v2 <> Ext:42 var
R2531:2532 project.assertions_v2 <> Ex:41 var
R2567:2570 project.assertions_v2 <> rule:43 ind
R2599:2603 project.assertions_v2 <> OPlus def
R2605:2606 project.assertions_v2 <> Ex:41 var
R2608:2609 project.assertions_v2 <> Q1:52 var
R2611:2612 project.assertions_v2 <> Q2:54 var
R2596:2596 project.assertions_v2 <> c:55 var
R2580:2584 project.assertions_v2 <> OPlus def
R2586:2587 project.assertions_v2 <> Ex:41 var
R2589:2590 project.assertions_v2 <> P1:51 var
R2592:2593 project.assertions_v2 <> P2:53 var
R2575:2577 project.assertions_v2 <> Ext:42 var
R2572:2573 project.assertions_v2 <> Ex:41 var
R2644:2646 project.commands <> com ind
R2648:2649 project.assertions_v2 <> Ex:41 var
binder 2640:2640 <> c:56
R2653:2656 project.assertions_v2 <> rule:43 ind
R2680:2685 project.assertions_v2 <> T_plus def
R2687:2688 project.assertions_v2 <> Ex:41 var
R2677:2677 project.assertions_v2 <> c:56 var
R2666:2671 project.assertions_v2 <> T_plus def
R2673:2674 project.assertions_v2 <> Ex:41 var
R2661:2663 project.assertions_v2 <> Ext:42 var
R2658:2659 project.assertions_v2 <> Ex:41 var
R2719:2727 project.assertions_v2 <> assertion def
R2729:2730 project.assertions_v2 <> Ex:41 var
binder 2715:2715 <> P:57
R2738:2740 project.commands <> com ind
R2742:2743 project.assertions_v2 <> Ex:41 var
binder 2734:2734 <> c:58
R2766:2769 project.assertions_v2 <> rule:43 ind
R2783:2785 project.assertions_v2 <> Top def
R2787:2788 project.assertions_v2 <> Ex:41 var
R2780:2780 project.assertions_v2 <> c:58 var
R2778:2778 project.assertions_v2 <> P:57 var
R2774:2776 project.assertions_v2 <> Ext:42 var
R2771:2772 project.assertions_v2 <> Ex:41 var
R2820:2828 project.assertions_v2 <> assertion def
R2830:2831 project.assertions_v2 <> Ex:41 var
binder 2816:2816 <> P:59
R2839:2841 project.commands <> com ind
R2843:2844 project.assertions_v2 <> Ex:41 var
binder 2835:2835 <> c:60
R2866:2869 project.assertions_v2 <> rule:43 ind
R2889:2889 project.assertions_v2 <> P:59 var
R2887:2887 project.assertions_v2 <> c:60 var
R2879:2881 project.assertions_v2 <> Bot def
R2883:2884 project.assertions_v2 <> Ex:41 var
R2874:2876 project.assertions_v2 <> Ext:42 var
R2871:2872 project.assertions_v2 <> Ex:41 var
R2934:2942 project.assertions_v2 <> assertion def
R2944:2945 project.assertions_v2 <> Ex:41 var
binder 2922:2923 <> P':61
binder 2925:2925 <> P:62
binder 2927:2927 <> Q:63
binder 2929:2930 <> Q':64
R2953:2955 project.commands <> com ind
R2957:2958 project.assertions_v2 <> Ex:41 var
binder 2949:2949 <> c:65
R2982:2982 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3027:3051 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2995:2995 project.commands <> M proj
R2997:2998 project.assertions_v2 <> Ex:41 var
R3000:3004 project.commands <> state def
binder 2991:2991 <> m:66
R3008:3016 project.assertions_v2 <> ImpliesOC def
R3018:3019 project.assertions_v2 <> Ex:41 var
R3021:3022 project.assertions_v2 <> P':61 var
R3024:3024 project.assertions_v2 <> P:62 var
R3026:3026 project.assertions_v2 <> m:66 var
R3069:3092 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3052:3055 project.assertions_v2 <> rule:43 ind
R3068:3068 project.assertions_v2 <> Q:63 var
R3066:3066 project.assertions_v2 <> c:65 var
R3064:3064 project.assertions_v2 <> P:62 var
R3060:3062 project.assertions_v2 <> Ext:42 var
R3057:3058 project.assertions_v2 <> Ex:41 var
R3093:3093 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3138:3162 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3106:3106 project.commands <> M proj
R3108:3109 project.assertions_v2 <> Ex:41 var
R3111:3115 project.commands <> state def
binder 3102:3102 <> m:67
R3119:3127 project.assertions_v2 <> ImpliesOC def
R3129:3130 project.assertions_v2 <> Ex:41 var
R3132:3132 project.assertions_v2 <> Q:63 var
R3134:3135 project.assertions_v2 <> Q':64 var
R3137:3137 project.assertions_v2 <> m:67 var
R3163:3166 project.assertions_v2 <> rule:43 ind
R3180:3181 project.assertions_v2 <> Q':64 var
R3178:3178 project.assertions_v2 <> c:65 var
R3175:3176 project.assertions_v2 <> P':61 var
R3171:3173 project.assertions_v2 <> Ext:42 var
R3168:3169 project.assertions_v2 <> Ex:41 var
R3223:3231 project.assertions_v2 <> assertion def
R3233:3234 project.assertions_v2 <> Ex:41 var
binder 3213:3213 <> P:68
binder 3215:3216 <> Q1:69
binder 3218:3219 <> Q2:70
R3246:3248 project.commands <> com ind
R3250:3251 project.assertions_v2 <> Ex:41 var
binder 3238:3239 <> c1:71
binder 3241:3242 <> c2:72
R3260:3267 project.commands <> is_total def
R3269:3270 project.assertions_v2 <> Ex:41 var
binder 3255:3256 <> pf:73
R3315:3318 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3296:3299 project.assertions_v2 <> rule:43 ind
R3313:3314 project.assertions_v2 <> Q1:69 var
R3310:3311 project.assertions_v2 <> c1:71 var
R3308:3308 project.assertions_v2 <> P:68 var
R3304:3306 project.assertions_v2 <> Ext:42 var
R3301:3302 project.assertions_v2 <> Ex:41 var
R3338:3363 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3319:3322 project.assertions_v2 <> rule:43 ind
R3336:3337 project.assertions_v2 <> Q2:70 var
R3333:3334 project.assertions_v2 <> c2:72 var
R3331:3331 project.assertions_v2 <> P:68 var
R3327:3329 project.assertions_v2 <> Ext:42 var
R3324:3325 project.assertions_v2 <> Ex:41 var
R3364:3367 project.assertions_v2 <> rule:43 ind
R3405:3409 project.assertions_v2 <> OPlus def
R3411:3412 project.assertions_v2 <> Ex:41 var
R3414:3415 project.assertions_v2 <> Q1:69 var
R3417:3418 project.assertions_v2 <> Q2:70 var
R3379:3389 project.commands <> CPlus_total constr
R3391:3392 project.assertions_v2 <> Ex:41 var
R3394:3395 project.assertions_v2 <> c1:71 var
R3397:3398 project.assertions_v2 <> c2:72 var
R3400:3401 project.assertions_v2 <> pf:73 var
R3376:3376 project.assertions_v2 <> P:68 var
R3372:3374 project.assertions_v2 <> Ext:42 var
R3369:3370 project.assertions_v2 <> Ex:41 var
R3455:3463 project.assertions_v2 <> assertion def
R3465:3466 project.assertions_v2 <> Ex:41 var
binder 3445:3445 <> P:74
binder 3447:3448 <> Q1:75
binder 3450:3451 <> Q2:76
R3478:3481 project.commands <> vexp ind
binder 3470:3471 <> e1:77
binder 3473:3474 <> e2:78
R3493:3495 project.commands <> com ind
R3497:3498 project.assertions_v2 <> Ex:41 var
binder 3485:3486 <> c1:79
binder 3488:3489 <> c2:80
R3525:3534 project.commands <> compatible def
R3536:3537 project.assertions_v2 <> e1:77 var
R3539:3540 project.assertions_v2 <> e2:78 var
binder 3520:3521 <> pf:81
R3607:3629 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3562:3565 project.assertions_v2 <> rule:43 ind
R3605:3606 project.assertions_v2 <> Q1:75 var
R3577:3580 project.commands <> CSeq constr
R3582:3583 project.assertions_v2 <> Ex:41 var
R3586:3592 project.commands <> CAssume constr
R3594:3595 project.assertions_v2 <> Ex:41 var
R3597:3598 project.assertions_v2 <> e1:77 var
R3601:3602 project.assertions_v2 <> c1:79 var
R3574:3574 project.assertions_v2 <> P:74 var
R3570:3572 project.assertions_v2 <> Ext:42 var
R3567:3568 project.assertions_v2 <> Ex:41 var
R3675:3696 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3630:3633 project.assertions_v2 <> rule:43 ind
R3673:3674 project.assertions_v2 <> Q2:76 var
R3645:3648 project.commands <> CSeq constr
R3650:3651 project.assertions_v2 <> Ex:41 var
R3654:3660 project.commands <> CAssume constr
R3662:3663 project.assertions_v2 <> Ex:41 var
R3665:3666 project.assertions_v2 <> e2:78 var
R3669:3670 project.assertions_v2 <> c2:80 var
R3642:3642 project.assertions_v2 <> P:74 var
R3638:3640 project.assertions_v2 <> Ext:42 var
R3635:3636 project.assertions_v2 <> Ex:41 var
R3697:3700 project.assertions_v2 <> rule:43 ind
R3738:3742 project.assertions_v2 <> OPlus def
R3744:3745 project.assertions_v2 <> Ex:41 var
R3747:3748 project.assertions_v2 <> Q1:75 var
R3750:3751 project.assertions_v2 <> Q2:76 var
R3712:3716 project.commands <> CPlus constr
R3718:3719 project.assertions_v2 <> Ex:41 var
R3721:3722 project.assertions_v2 <> e1:77 var
R3724:3725 project.assertions_v2 <> e2:78 var
R3727:3728 project.assertions_v2 <> c1:79 var
R3730:3731 project.assertions_v2 <> c2:80 var
R3733:3734 project.assertions_v2 <> pf:81 var
R3709:3709 project.assertions_v2 <> P:74 var
R3705:3707 project.assertions_v2 <> Ext:42 var
R3702:3703 project.assertions_v2 <> Ex:41 var
prf 4423:4449 <> compatible_addition_defined
R4466:4482 project.commands <> exec_model_consts rec
binder 4461:4462 <> Ex:82
R4494:4510 project.commands <> exec_model_theory rec
R4512:4513 project.assertions_v2 <> Ex:82 var
binder 4488:4490 <> Ext:83
R4525:4528 project.commands <> vexp ind
binder 4517:4518 <> e1:84
binder 4520:4521 <> e2:85
R4540:4542 project.commands <> com ind
R4544:4545 project.assertions_v2 <> Ex:82 var
binder 4532:4533 <> c1:86
binder 4535:4536 <> c2:87
R4556:4565 project.commands <> compatible def
R4567:4568 project.assertions_v2 <> e1:84 var
R4570:4571 project.assertions_v2 <> e2:85 var
binder 4551:4552 <> pf:88
R4580:4584 project.commands <> state def
binder 4575:4576 <> st:89
R4591:4602 project.commands <> exec_partial proj
R4604:4605 project.assertions_v2 <> Ex:82 var
R4607:4611 project.commands <> state def
R4616:4620 project.commands <> ceval def
R4622:4623 project.assertions_v2 <> Ex:82 var
R4625:4627 project.assertions_v2 <> Ext:83 var
R4630:4633 project.commands <> CSeq constr
R4635:4636 project.assertions_v2 <> Ex:82 var
R4639:4643 project.commands <> CAtom constr
R4645:4646 project.assertions_v2 <> Ex:82 var
R4649:4655 project.commands <> CAssume constr
R4657:4658 project.assertions_v2 <> Ex:82 var
R4660:4661 project.assertions_v2 <> e1:84 var
R4665:4666 project.assertions_v2 <> c1:86 var
R4669:4670 project.assertions_v2 <> st:89 var
R4676:4680 project.commands <> ceval def
R4682:4683 project.assertions_v2 <> Ex:82 var
R4685:4687 project.assertions_v2 <> Ext:83 var
R4690:4693 project.commands <> CSeq constr
R4695:4696 project.assertions_v2 <> Ex:82 var
R4699:4703 project.commands <> CAtom constr
R4705:4706 project.assertions_v2 <> Ex:82 var
R4709:4715 project.commands <> CAssume constr
R4717:4718 project.assertions_v2 <> Ex:82 var
R4720:4721 project.assertions_v2 <> e2:85 var
R4725:4726 project.assertions_v2 <> c2:87 var
R4729:4730 project.assertions_v2 <> st:89 var
R4758:4767 project.commands <> compatible def
R4819:4832 project.commands <> bop_id_defined thm
R4819:4832 project.commands <> bop_id_defined thm
R4819:4832 project.commands <> bop_id_defined thm
R4878:4891 project.commands <> preserve_bind2 proj
R4878:4891 project.commands <> preserve_bind2 proj
R4938:4951 project.commands <> preserve_bind2 proj
R4938:4951 project.commands <> preserve_bind2 proj
prf 4977:4984 <> OL_sound
R5001:5017 project.commands <> exec_model_consts rec
binder 4996:4997 <> Ex:90
R5027:5043 project.commands <> exec_model_theory rec
R5045:5046 project.assertions_v2 <> Ex:90 var
binder 5021:5023 <> Ext:91
R5058:5066 project.assertions_v2 <> assertion def
R5068:5069 project.assertions_v2 <> Ex:90 var
binder 5052:5052 <> P:92
binder 5054:5054 <> Q:93
R5077:5079 project.commands <> com ind
R5081:5082 project.assertions_v2 <> Ex:90 var
binder 5073:5073 <> c:94
R5105:5108 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5088:5091 project.assertions_v2 <> rule ind
R5093:5094 project.assertions_v2 <> Ex:90 var
R5096:5098 project.assertions_v2 <> Ext:91 var
R5100:5100 project.assertions_v2 <> P:92 var
R5102:5102 project.assertions_v2 <> c:94 var
R5104:5104 project.assertions_v2 <> Q:93 var
R5109:5122 project.assertions_v2 <> outcome_triple def
R5124:5125 project.assertions_v2 <> Ex:90 var
R5127:5129 project.assertions_v2 <> Ext:91 var
R5131:5131 project.assertions_v2 <> P:92 var
R5133:5133 project.assertions_v2 <> c:94 var
R5135:5135 project.assertions_v2 <> Q:93 var
R5176:5189 project.assertions_v2 <> outcome_triple def
R5217:5228 project.assertions_v2 <> ceval_lifted def
R5257:5270 project.commands <> bind_with_unit proj
R5257:5270 project.commands <> bind_with_unit proj
R5257:5270 project.commands <> bind_with_unit proj
R5306:5321 project.commands <> bind_composition proj
R5306:5321 project.commands <> bind_composition proj
R5306:5321 project.commands <> bind_composition proj
R5400:5404 project.assertions_v2 <> OPlus def
R5510:5521 project.assertions_v2 <> ceval_lifted def
R5510:5521 project.assertions_v2 <> ceval_lifted def
R5557:5568 project.assertions_v2 <> ceval_lifted def
R5557:5568 project.assertions_v2 <> ceval_lifted def
R5625:5632 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R5665:5667 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R5638:5649 project.commands <> exec_partial proj
R5654:5658 project.commands <> state def
binder 5633:5634 <> pf:95
R5720:5737 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5668:5671 project.commands <> bind proj
R5705:5709 project.commands <> ceval def
R5677:5678 project.partial <> ap def
R5681:5683 project.commands <> bop proj
R5688:5692 project.commands <> state def
R5738:5739 project.partial <> ap def
R5762:5763 project.assertions_v2 <> pf:95 var
R5742:5744 project.commands <> bop proj
R5749:5753 project.commands <> state def
R5625:5632 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R5665:5667 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R5638:5649 project.commands <> exec_partial proj
R5654:5658 project.commands <> state def
binder 5633:5634 <> pf:96
R5720:5737 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5668:5671 project.commands <> bind proj
R5705:5709 project.commands <> ceval def
R5677:5678 project.partial <> ap def
R5681:5683 project.commands <> bop proj
R5688:5692 project.commands <> state def
R5738:5739 project.partial <> ap def
R5762:5763 project.assertions_v2 <> pf:96 var
R5742:5744 project.commands <> bop proj
R5749:5753 project.commands <> state def
R5789:5800 project.assertions_v2 <> ceval_lifted def
R5810:5823 project.commands <> preserve_bind1 proj
R5810:5823 project.commands <> preserve_bind1 proj
R6027:6032 project.assertions_v2 <> T_plus def
R6060:6073 project.commands <> preserve_bind2 proj
R6060:6073 project.commands <> preserve_bind2 proj
R6060:6073 project.commands <> preserve_bind2 proj
R6102:6104 project.assertions_v2 <> Top def
R6124:6126 project.assertions_v2 <> Bot def
R6151:6159 project.assertions_v2 <> ImpliesOC def
R6241:6244 project.commands <> bind proj
R6252:6256 project.commands <> ceval def
R6241:6244 project.commands <> bind proj
R6252:6256 project.commands <> ceval def
R6328:6332 project.assertions_v2 <> OPlus def
R6347:6350 project.commands <> bind proj
R6358:6362 project.commands <> ceval def
R6347:6350 project.commands <> bind proj
R6358:6362 project.commands <> ceval def
R6450:6461 project.assertions_v2 <> ceval_lifted def
R6450:6461 project.assertions_v2 <> ceval_lifted def
R6498:6509 project.assertions_v2 <> ceval_lifted def
R6498:6509 project.assertions_v2 <> ceval_lifted def
R6569:6575 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R6577:6578 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 6576:6576 <> H:97
R6604:6615 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6579:6580 project.partial <> ap def
R6603:6603 project.assertions_v2 <> H:97 var
R6583:6585 project.commands <> bop proj
R6590:6594 project.commands <> state def
R6616:6619 project.commands <> bind proj
binder 6631:6632 <> st:98
R6637:6638 project.partial <> ap def
R6712:6738 project.commands <> ceval_obligation_1 thm
R6740:6744 project.commands <> ceval def
R6753:6754 project.assertions_v2 <> st:98 var
R6689:6693 project.commands <> ceval def
R6706:6707 project.assertions_v2 <> st:98 var
R6657:6661 project.commands <> ceval def
R6674:6675 project.assertions_v2 <> st:98 var
R6641:6643 project.commands <> bop proj
R6648:6652 project.commands <> state def
R6569:6575 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R6577:6578 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 6576:6576 <> H:99
R6604:6615 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6579:6580 project.partial <> ap def
R6603:6603 project.assertions_v2 <> H:99 var
R6583:6585 project.commands <> bop proj
R6590:6594 project.commands <> state def
R6616:6619 project.commands <> bind proj
binder 6631:6632 <> st:100
R6637:6638 project.partial <> ap def
R6712:6738 project.commands <> ceval_obligation_1 thm
R6740:6744 project.commands <> ceval def
R6753:6754 project.assertions_v2 <> st:100 var
R6689:6693 project.commands <> ceval def
R6706:6707 project.assertions_v2 <> st:100 var
R6657:6661 project.commands <> ceval def
R6674:6675 project.assertions_v2 <> st:100 var
R6641:6643 project.commands <> bop proj
R6648:6652 project.commands <> state def
R6801:6814 project.commands <> preserve_bind3 proj
R6801:6814 project.commands <> preserve_bind3 proj
R6901:6912 project.assertions_v2 <> ceval_lifted def
R6947:6958 project.assertions_v2 <> ceval_lifted def
R6982:6986 project.assertions_v2 <> OPlus def
R6996:7005 project.commands <> compatible def
R7049:7075 project.assertions_v2 <> compatible_addition_defined thm
R7049:7075 project.assertions_v2 <> compatible_addition_defined thm
R7122:7128 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R7131:7132 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 7129:7130 <> H':101
R7300:7308 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7133:7134 project.partial <> ap def
R7298:7299 project.assertions_v2 <> H':101 var
R7232:7235 project.commands <> bind proj
R7243:7247 project.commands <> ceval def
R7257:7260 project.commands <> CSeq constr
R7266:7270 project.commands <> CAtom constr
R7276:7282 project.commands <> CAssume constr
R7159:7162 project.commands <> bind proj
R7170:7174 project.commands <> ceval def
R7184:7187 project.commands <> CSeq constr
R7193:7197 project.commands <> CAtom constr
R7203:7209 project.commands <> CAssume constr
R7137:7139 project.commands <> bop proj
R7144:7148 project.commands <> state def
R7309:7312 project.commands <> bind proj
binder 7324:7325 <> st:102
R7330:7331 project.partial <> ap def
R7482:7483 project.assertions_v2 <> st:102 var
R7421:7425 project.commands <> ceval def
R7435:7438 project.commands <> CSeq constr
R7444:7448 project.commands <> CAtom constr
R7454:7460 project.commands <> CAssume constr
R7474:7475 project.assertions_v2 <> st:102 var
R7356:7360 project.commands <> ceval def
R7370:7373 project.commands <> CSeq constr
R7379:7383 project.commands <> CAtom constr
R7389:7395 project.commands <> CAssume constr
R7409:7410 project.assertions_v2 <> st:102 var
R7334:7336 project.commands <> bop proj
R7341:7345 project.commands <> state def
R7122:7128 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R7131:7132 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 7129:7130 <> H':103
R7300:7308 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7133:7134 project.partial <> ap def
R7298:7299 project.assertions_v2 <> H':103 var
R7232:7235 project.commands <> bind proj
R7243:7247 project.commands <> ceval def
R7257:7260 project.commands <> CSeq constr
R7266:7270 project.commands <> CAtom constr
R7276:7282 project.commands <> CAssume constr
R7159:7162 project.commands <> bind proj
R7170:7174 project.commands <> ceval def
R7184:7187 project.commands <> CSeq constr
R7193:7197 project.commands <> CAtom constr
R7203:7209 project.commands <> CAssume constr
R7137:7139 project.commands <> bop proj
R7144:7148 project.commands <> state def
R7309:7312 project.commands <> bind proj
binder 7324:7325 <> st:104
R7330:7331 project.partial <> ap def
R7482:7483 project.assertions_v2 <> st:104 var
R7421:7425 project.commands <> ceval def
R7435:7438 project.commands <> CSeq constr
R7444:7448 project.commands <> CAtom constr
R7454:7460 project.commands <> CAssume constr
R7474:7475 project.assertions_v2 <> st:104 var
R7356:7360 project.commands <> ceval def
R7370:7373 project.commands <> CSeq constr
R7379:7383 project.commands <> CAtom constr
R7389:7395 project.commands <> CAssume constr
R7409:7410 project.assertions_v2 <> st:104 var
R7334:7336 project.commands <> bop proj
R7341:7345 project.commands <> state def
R7504:7517 project.commands <> preserve_bind3 proj
R7504:7517 project.commands <> preserve_bind3 proj
R7674:7674 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7845:7854 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7916:7916 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7685:7689 project.commands <> state def
binder 7680:7681 <> st:105
R7695:7696 project.partial <> ap def
R7842:7843 project.assertions_v2 <> st:105 var
R7781:7785 project.commands <> ceval def
R7795:7798 project.commands <> CSeq constr
R7804:7808 project.commands <> CAtom constr
R7814:7820 project.commands <> CAssume constr
R7834:7835 project.assertions_v2 <> st:105 var
R7719:7723 project.commands <> ceval def
R7733:7736 project.commands <> CSeq constr
R7742:7746 project.commands <> CAtom constr
R7752:7758 project.commands <> CAssume constr
R7772:7773 project.assertions_v2 <> st:105 var
R7699:7701 project.commands <> bop proj
R7706:7710 project.commands <> state def
R7865:7869 project.commands <> state def
binder 7860:7861 <> st:106
R7875:7879 project.commands <> ceval def
R7889:7893 project.commands <> CPlus constr
R7914:7915 project.assertions_v2 <> st:106 var
R7674:7674 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7845:7854 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7916:7916 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7685:7689 project.commands <> state def
binder 7680:7681 <> st:107
R7695:7696 project.partial <> ap def
R7842:7843 project.assertions_v2 <> st:107 var
R7781:7785 project.commands <> ceval def
R7795:7798 project.commands <> CSeq constr
R7804:7808 project.commands <> CAtom constr
R7814:7820 project.commands <> CAssume constr
R7834:7835 project.assertions_v2 <> st:107 var
R7719:7723 project.commands <> ceval def
R7733:7736 project.commands <> CSeq constr
R7742:7746 project.commands <> CAtom constr
R7752:7758 project.commands <> CAssume constr
R7772:7773 project.assertions_v2 <> st:107 var
R7699:7701 project.commands <> bop proj
R7706:7710 project.commands <> state def
R7865:7869 project.commands <> state def
binder 7860:7861 <> st:108
R7875:7879 project.commands <> ceval def
R7889:7893 project.commands <> CPlus constr
R7914:7915 project.assertions_v2 <> st:108 var
R8000:8024 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R8000:8024 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R8041:8065 project.commands <> compatible_ceval_plus_rev thm
R8041:8065 project.commands <> compatible_ceval_plus_rev thm
def 8365:8366 <> pc
R8374:8390 project.commands <> exec_model_consts rec
binder 8369:8370 <> Ex:109
R8400:8416 project.commands <> exec_model_theory rec
R8418:8419 project.assertions_v2 <> Ex:109 var
binder 8394:8396 <> Ext:110
R8429:8437 project.assertions_v2 <> assertion def
R8439:8440 project.assertions_v2 <> Ex:109 var
binder 8425:8425 <> P:111
R8448:8450 project.commands <> com ind
R8452:8453 project.assertions_v2 <> Ex:109 var
binder 8444:8444 <> c:112
R8461:8469 project.assertions_v2 <> assertion def
R8471:8472 project.assertions_v2 <> Ex:109 var
binder 8457:8457 <> Q:113
R8480:8493 project.assertions_v2 <> outcome_triple def
R8495:8496 project.assertions_v2 <> Ex:109 var
R8498:8500 project.assertions_v2 <> Ext:110 var
R8502:8502 project.assertions_v2 <> P:111 var
R8504:8504 project.assertions_v2 <> c:112 var
R8507:8510 project.assertions_v2 <> OrOC def
R8512:8513 project.assertions_v2 <> Ex:109 var
R8515:8515 project.assertions_v2 <> Q:113 var
R8518:8523 project.assertions_v2 <> T_plus def
R8525:8526 project.assertions_v2 <> Ex:109 var
def 8644:8645 <> PS
R8650:8668 project.examples <> powerset_exec_model def
def 8682:8684 <> PSt
R8689:8714 project.examples <> powerset_exec_model_theory def
def 8729:8740 <> hoare_triple
R8752:8755 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8747:8751 project.commands <> state def
binder 8743:8743 <> P:114
R8767:8769 project.commands <> com ind
R8771:8772 project.assertions_v2 <> PS def
binder 8763:8763 <> c:115
R8785:8788 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8780:8784 project.commands <> state def
binder 8776:8776 <> Q:116
R8816:8820 project.commands <> state def
binder 8808:8809 <> st:117
binder 8811:8813 <> st':118
R8832:8835 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8826:8826 project.assertions_v2 <> P:114 var
R8829:8830 project.assertions_v2 <> st:117 var
R8868:8871 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8836:8837 Coq.Sets.Ensembles <> In def
R8846:8850 project.commands <> ceval def
R8852:8853 project.assertions_v2 <> PS def
R8855:8857 project.assertions_v2 <> PSt def
R8859:8859 project.assertions_v2 <> c:115 var
R8861:8862 project.assertions_v2 <> st:117 var
R8865:8867 project.assertions_v2 <> st':118 var
R8839:8843 project.commands <> state def
R8872:8872 project.assertions_v2 <> Q:116 var
R8875:8877 project.assertions_v2 <> st':118 var
R8917:8928 project.assertions_v2 <> hoare_triple def
not 8891:8891 <> ::OL_scope:'{{'_x_'}}'_x_'{{'_x_'}}'
def 9051:9065 <> atomic_powerset
R9077:9080 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9072:9076 project.commands <> state def
binder 9068:9068 <> P:119
R9089:9097 project.assertions_v2 <> assertion def
R9099:9100 project.assertions_v2 <> PS def
R9116:9123 Coq.Sets.Ensembles <> Ensemble def
R9125:9129 project.commands <> state def
binder 9112:9112 <> A:120
R9152:9160 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R9135:9143 Coq.Sets.Ensembles <> Inhabited ind
R9151:9151 project.assertions_v2 <> A:120 var
R9145:9149 project.commands <> state def
R9173:9177 project.commands <> state def
binder 9169:9169 <> x:121
R9193:9196 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9181:9182 Coq.Sets.Ensembles <> In def
R9190:9190 project.assertions_v2 <> A:120 var
R9192:9192 project.assertions_v2 <> x:121 var
R9184:9188 project.commands <> state def
R9197:9197 project.assertions_v2 <> P:119 var
R9199:9199 project.assertions_v2 <> x:121 var
prf 9252:9273 <> apply_f_to_uninhabited
binder 9285:9285 <> A:122
binder 9287:9287 <> B:123
R9302:9309 Coq.Sets.Ensembles <> Ensemble def
R9311:9311 project.assertions_v2 <> A:122 var
binder 9298:9298 <> U:124
R9320:9323 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9319:9319 project.assertions_v2 <> A:122 var
R9324:9331 Coq.Sets.Ensembles <> Ensemble def
R9333:9333 project.assertions_v2 <> B:123 var
binder 9315:9315 <> f:125
R9354:9357 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9339:9340 Coq.Init.Logic <> ::type_scope:'~'_x not
R9341:9349 Coq.Sets.Ensembles <> Inhabited ind
R9353:9353 project.assertions_v2 <> U:124 var
R9351:9351 project.assertions_v2 <> A:122 var
R9358:9359 Coq.Init.Logic <> ::type_scope:'~'_x not
R9360:9368 Coq.Sets.Ensembles <> Inhabited ind
R9373:9379 project.examples <> apply_f def
R9383:9383 project.assertions_v2 <> f:125 var
R9381:9381 project.assertions_v2 <> U:124 var
R9370:9370 project.assertions_v2 <> B:123 var
R9411:9417 project.examples <> apply_f def
R9427:9429 Coq.Init.Logic <> not def
prf 9533:9540 <> ap_union
R9558:9565 Coq.Sets.Ensembles <> Ensemble def
R9567:9571 project.commands <> state def
binder 9552:9552 <> U:126
binder 9554:9554 <> T:127
R9580:9591 project.commands <> exec_partial proj
R9593:9594 project.assertions_v2 <> PS def
R9596:9600 project.commands <> state def
R9602:9602 project.assertions_v2 <> U:126 var
R9604:9604 project.assertions_v2 <> T:127 var
binder 9575:9576 <> pf:128
R9641:9643 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9610:9611 project.partial <> ap def
R9639:9640 project.assertions_v2 <> pf:128 var
R9637:9637 project.assertions_v2 <> T:127 var
R9635:9635 project.assertions_v2 <> U:126 var
R9614:9626 project.examples <> partial_union def
R9628:9632 project.commands <> state def
R9644:9648 Coq.Sets.Ensembles <> Union ind
R9656:9656 project.assertions_v2 <> U:126 var
R9658:9658 project.assertions_v2 <> T:127 var
R9650:9654 project.commands <> state def
R9685:9708 Coq.Sets.Ensembles <> Extensionality_Ensembles prfax
R9685:9708 Coq.Sets.Ensembles <> Extensionality_Ensembles prfax
R9718:9725 Coq.Sets.Ensembles <> Same_set def
R9735:9742 Coq.Sets.Ensembles <> Included def
R9775:9776 Coq.Sets.Ensembles <> In def
R9791:9803 project.examples <> partial_union def
R9818:9829 project.partial <> make_partial def
R9848:9849 project.partial <> ap def
R9874:9875 Coq.Sets.Ensembles <> In def
R9890:9902 project.examples <> partial_union def
R9912:9923 project.partial <> make_partial def
R9933:9934 project.partial <> ap def
prf 9957:9979 <> assume_inhabited_or_not
R9995:9998 project.commands <> vexp ind
binder 9991:9991 <> e:129
R10006:10013 Coq.Sets.Ensembles <> Ensemble def
R10015:10019 project.commands <> state def
binder 10002:10002 <> U:130
R10042:10048 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10025:10033 Coq.Sets.Ensembles <> Inhabited ind
R10041:10041 project.assertions_v2 <> U:130 var
R10035:10039 project.commands <> state def
R10117:10122 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R10049:10057 Coq.Sets.Ensembles <> Inhabited ind
R10066:10072 project.examples <> apply_f def
R10077:10081 project.commands <> ceval def
R10083:10084 project.assertions_v2 <> PS def
R10086:10088 project.assertions_v2 <> PSt def
R10091:10095 project.commands <> CAtom constr
R10097:10098 project.assertions_v2 <> PS def
R10101:10107 project.commands <> CAssume constr
R10109:10110 project.assertions_v2 <> PS def
R10112:10112 project.assertions_v2 <> e:129 var
R10074:10074 project.assertions_v2 <> U:130 var
R10059:10063 project.commands <> state def
R10123:10125 Coq.Init.Logic <> not def
R10128:10136 Coq.Sets.Ensembles <> Inhabited ind
R10145:10151 project.examples <> apply_f def
R10156:10160 project.commands <> ceval def
R10162:10163 project.assertions_v2 <> PS def
R10165:10167 project.assertions_v2 <> PSt def
R10170:10176 project.commands <> CAssume constr
R10178:10179 project.assertions_v2 <> PS def
R10181:10181 project.assertions_v2 <> e:129 var
R10153:10153 project.assertions_v2 <> U:130 var
R10138:10142 project.commands <> state def
R10232:10233 Coq.Sets.Ensembles <> In def
R10252:10256 project.commands <> veval def
R10252:10256 project.commands <> veval def
R10289:10295 project.examples <> apply_f def
R10358:10369 Coq.Sets.Ensembles <> In_singleton constr
R10358:10369 Coq.Sets.Ensembles <> In_singleton constr
R10401:10407 project.examples <> apply_f def
R10459:10460 Coq.Sets.Ensembles <> In def
R10488:10499 Coq.Sets.Ensembles <> In_singleton constr
R10488:10499 Coq.Sets.Ensembles <> In_singleton constr
prf 10527:10546 <> seq_inhabited_or_not
R10562:10569 Coq.Sets.Ensembles <> Ensemble def
R10571:10575 project.commands <> state def
binder 10558:10558 <> U:131
R10587:10589 project.commands <> com ind
R10591:10592 project.assertions_v2 <> PS def
binder 10579:10580 <> c1:132
binder 10582:10583 <> c2:133
R10615:10621 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10598:10606 Coq.Sets.Ensembles <> Inhabited ind
R10614:10614 project.assertions_v2 <> U:131 var
R10608:10612 project.commands <> state def
R10622:10622 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10768:10774 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 10630:10631 <> U':134
R10652:10660 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10634:10642 Coq.Sets.Ensembles <> Inhabited ind
R10650:10651 project.assertions_v2 <> U':134 var
R10644:10648 project.commands <> state def
R10707:10715 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R10661:10669 Coq.Sets.Ensembles <> Inhabited ind
R10678:10684 project.examples <> apply_f def
R10690:10694 project.commands <> ceval def
R10696:10697 project.assertions_v2 <> PS def
R10699:10701 project.assertions_v2 <> PSt def
R10703:10704 project.assertions_v2 <> c1:132 var
R10686:10687 project.assertions_v2 <> U':134 var
R10671:10675 project.commands <> state def
R10716:10718 Coq.Init.Logic <> not def
R10721:10729 Coq.Sets.Ensembles <> Inhabited ind
R10738:10744 project.examples <> apply_f def
R10750:10754 project.commands <> ceval def
R10756:10757 project.assertions_v2 <> PS def
R10759:10761 project.assertions_v2 <> PSt def
R10763:10764 project.assertions_v2 <> c1:132 var
R10746:10747 project.assertions_v2 <> U':134 var
R10731:10735 project.commands <> state def
R10775:10775 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10921:10927 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 10783:10784 <> U':135
R10805:10813 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10787:10795 Coq.Sets.Ensembles <> Inhabited ind
R10803:10804 project.assertions_v2 <> U':135 var
R10797:10801 project.commands <> state def
R10860:10868 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R10814:10822 Coq.Sets.Ensembles <> Inhabited ind
R10831:10837 project.examples <> apply_f def
R10843:10847 project.commands <> ceval def
R10849:10850 project.assertions_v2 <> PS def
R10852:10854 project.assertions_v2 <> PSt def
R10856:10857 project.assertions_v2 <> c2:133 var
R10839:10840 project.assertions_v2 <> U':135 var
R10824:10828 project.commands <> state def
R10869:10871 Coq.Init.Logic <> not def
R10874:10882 Coq.Sets.Ensembles <> Inhabited ind
R10891:10897 project.examples <> apply_f def
R10903:10907 project.commands <> ceval def
R10909:10910 project.assertions_v2 <> PS def
R10912:10914 project.assertions_v2 <> PSt def
R10916:10917 project.assertions_v2 <> c2:133 var
R10899:10900 project.assertions_v2 <> U':135 var
R10884:10888 project.commands <> state def
R10986:10994 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R10928:10936 Coq.Sets.Ensembles <> Inhabited ind
R10945:10951 project.examples <> apply_f def
R10956:10960 project.commands <> ceval def
R10962:10963 project.assertions_v2 <> PS def
R10965:10967 project.assertions_v2 <> PSt def
R10970:10973 project.commands <> CSeq constr
R10975:10976 project.assertions_v2 <> PS def
R10978:10979 project.assertions_v2 <> c1:132 var
R10981:10982 project.assertions_v2 <> c2:133 var
R10953:10953 project.assertions_v2 <> U:131 var
R10938:10942 project.commands <> state def
R10995:10997 Coq.Init.Logic <> not def
R11000:11008 Coq.Sets.Ensembles <> Inhabited ind
R11017:11023 project.examples <> apply_f def
R11028:11032 project.commands <> ceval def
R11034:11035 project.assertions_v2 <> PS def
R11037:11039 project.assertions_v2 <> PSt def
R11042:11045 project.commands <> CSeq constr
R11047:11048 project.assertions_v2 <> PS def
R11050:11051 project.assertions_v2 <> c1:132 var
R11053:11054 project.assertions_v2 <> c2:133 var
R11025:11025 project.assertions_v2 <> U:131 var
R11010:11014 project.commands <> state def
R11167:11182 project.commands <> bind_composition proj
R11184:11185 project.assertions_v2 <> PS def
R11187:11189 project.assertions_v2 <> PSt def
R11167:11182 project.commands <> bind_composition proj
R11184:11185 project.assertions_v2 <> PS def
R11187:11189 project.assertions_v2 <> PSt def
R11167:11182 project.commands <> bind_composition proj
R11184:11185 project.assertions_v2 <> PS def
R11187:11189 project.assertions_v2 <> PSt def
R11235:11250 project.commands <> bind_composition proj
R11252:11253 project.assertions_v2 <> PS def
R11255:11257 project.assertions_v2 <> PSt def
R11235:11250 project.commands <> bind_composition proj
R11252:11253 project.assertions_v2 <> PS def
R11255:11257 project.assertions_v2 <> PSt def
R11235:11250 project.commands <> bind_composition proj
R11252:11253 project.assertions_v2 <> PS def
R11255:11257 project.assertions_v2 <> PSt def
R11300:11315 project.commands <> bind_composition proj
R11317:11318 project.assertions_v2 <> PS def
R11320:11322 project.assertions_v2 <> PSt def
R11300:11315 project.commands <> bind_composition proj
R11317:11318 project.assertions_v2 <> PS def
R11320:11322 project.assertions_v2 <> PSt def
R11300:11315 project.commands <> bind_composition proj
R11317:11318 project.assertions_v2 <> PS def
R11320:11322 project.assertions_v2 <> PSt def
R11332:11353 project.assertions_v2 <> apply_f_to_uninhabited thm
R11332:11353 project.assertions_v2 <> apply_f_to_uninhabited thm
prf 11384:11400 <> apply_f_inhabited
R11415:11422 Coq.Sets.Ensembles <> Ensemble def
R11424:11428 project.commands <> state def
binder 11411:11411 <> U:136
R11436:11438 project.commands <> com ind
R11440:11441 project.assertions_v2 <> PS def
binder 11432:11432 <> c:137
R11464:11467 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11447:11455 Coq.Sets.Ensembles <> Inhabited ind
R11463:11463 project.assertions_v2 <> U:136 var
R11457:11461 project.commands <> state def
R11512:11519 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R11468:11476 Coq.Sets.Ensembles <> Inhabited ind
R11485:11491 project.examples <> apply_f def
R11496:11500 project.commands <> ceval def
R11502:11503 project.assertions_v2 <> PS def
R11505:11507 project.assertions_v2 <> PSt def
R11509:11509 project.assertions_v2 <> c:137 var
R11493:11493 project.assertions_v2 <> U:136 var
R11478:11482 project.commands <> state def
R11520:11522 Coq.Init.Logic <> not def
R11525:11533 Coq.Sets.Ensembles <> Inhabited ind
R11542:11548 project.examples <> apply_f def
R11553:11557 project.commands <> ceval def
R11559:11560 project.assertions_v2 <> PS def
R11562:11564 project.assertions_v2 <> PSt def
R11566:11566 project.assertions_v2 <> c:137 var
R11550:11550 project.assertions_v2 <> U:136 var
R11535:11539 project.commands <> state def
R11660:11662 Coq.Init.Logic <> not def
R11680:11686 project.examples <> apply_f def
R11721:11722 Coq.Sets.Ensembles <> In def
R11804:11810 project.examples <> apply_f def
R11827:11828 Coq.Sets.Ensembles <> In def
R11852:11853 Coq.Sets.Ensembles <> In def
R11869:11870 Coq.Sets.Ensembles <> In def
R11920:11939 project.assertions_v2 <> seq_inhabited_or_not thm
R11920:11939 project.assertions_v2 <> seq_inhabited_or_not thm
R12044:12050 project.examples <> apply_f def
R12060:12061 Coq.Sets.Ensembles <> In def
R12084:12090 project.examples <> apply_f def
R12112:12113 Coq.Sets.Ensembles <> In def
R12166:12167 Coq.Sets.Ensembles <> In def
R12212:12219 project.assertions_v2 <> ap_union thm
R12212:12219 project.assertions_v2 <> ap_union thm
R12212:12219 project.assertions_v2 <> ap_union thm
R12228:12239 Coq.Sets.Ensembles <> Union_introl constr
R12228:12239 Coq.Sets.Ensembles <> Union_introl constr
R12299:12305 project.examples <> apply_f def
R12315:12316 Coq.Sets.Ensembles <> In def
R12340:12346 project.examples <> apply_f def
R12370:12371 Coq.Sets.Ensembles <> In def
R12424:12425 Coq.Sets.Ensembles <> In def
R12472:12479 project.assertions_v2 <> ap_union thm
R12472:12479 project.assertions_v2 <> ap_union thm
R12472:12479 project.assertions_v2 <> ap_union thm
R12488:12499 Coq.Sets.Ensembles <> Union_intror constr
R12488:12499 Coq.Sets.Ensembles <> Union_intror constr
R12534:12536 Coq.Init.Logic <> not def
R12546:12548 Coq.Init.Logic <> not def
R12563:12565 Coq.Init.Logic <> not def
R12611:12612 Coq.Sets.Ensembles <> In def
R12628:12634 project.examples <> apply_f def
R12650:12651 Coq.Sets.Ensembles <> In def
R12716:12723 project.assertions_v2 <> ap_union thm
R12716:12723 project.assertions_v2 <> ap_union thm
R12716:12723 project.assertions_v2 <> ap_union thm
R12773:12779 project.examples <> apply_f def
R12799:12800 Coq.Sets.Ensembles <> In def
R12881:12887 project.examples <> apply_f def
R12907:12908 Coq.Sets.Ensembles <> In def
R12976:13002 project.assertions_v2 <> compatible_addition_defined thm
R13004:13005 project.assertions_v2 <> PS def
R13007:13009 project.assertions_v2 <> PSt def
R12976:13002 project.assertions_v2 <> compatible_addition_defined thm
R13004:13005 project.assertions_v2 <> PS def
R13007:13009 project.assertions_v2 <> PSt def
R13086:13095 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13048:13052 project.commands <> ceval def
R13054:13055 project.assertions_v2 <> PS def
R13057:13059 project.assertions_v2 <> PSt def
R13062:13066 project.commands <> CPlus constr
R13068:13069 project.assertions_v2 <> PS def
binder 13100:13101 <> st:138
R13106:13107 project.partial <> ap def
R13257:13258 project.assertions_v2 <> st:138 var
R13196:13200 project.commands <> ceval def
R13202:13203 project.assertions_v2 <> PS def
R13205:13207 project.assertions_v2 <> PSt def
R13210:13213 project.commands <> CSeq constr
R13215:13216 project.assertions_v2 <> PS def
R13219:13223 project.commands <> CAtom constr
R13225:13226 project.assertions_v2 <> PS def
R13229:13235 project.commands <> CAssume constr
R13237:13238 project.assertions_v2 <> PS def
R13249:13250 project.assertions_v2 <> st:138 var
R13132:13136 project.commands <> ceval def
R13138:13139 project.assertions_v2 <> PS def
R13141:13143 project.assertions_v2 <> PSt def
R13146:13149 project.commands <> CSeq constr
R13151:13152 project.assertions_v2 <> PS def
R13155:13159 project.commands <> CAtom constr
R13161:13162 project.assertions_v2 <> PS def
R13165:13171 project.commands <> CAssume constr
R13173:13174 project.assertions_v2 <> PS def
R13185:13186 project.assertions_v2 <> st:138 var
R13110:13112 project.commands <> bop proj
R13114:13115 project.assertions_v2 <> PS def
R13117:13121 project.commands <> state def
R13086:13095 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13048:13052 project.commands <> ceval def
R13054:13055 project.assertions_v2 <> PS def
R13057:13059 project.assertions_v2 <> PSt def
R13062:13066 project.commands <> CPlus constr
R13068:13069 project.assertions_v2 <> PS def
binder 13100:13101 <> st:139
R13106:13107 project.partial <> ap def
R13257:13258 project.assertions_v2 <> st:139 var
R13196:13200 project.commands <> ceval def
R13202:13203 project.assertions_v2 <> PS def
R13205:13207 project.assertions_v2 <> PSt def
R13210:13213 project.commands <> CSeq constr
R13215:13216 project.assertions_v2 <> PS def
R13219:13223 project.commands <> CAtom constr
R13225:13226 project.assertions_v2 <> PS def
R13229:13235 project.commands <> CAssume constr
R13237:13238 project.assertions_v2 <> PS def
R13249:13250 project.assertions_v2 <> st:139 var
R13132:13136 project.commands <> ceval def
R13138:13139 project.assertions_v2 <> PS def
R13141:13143 project.assertions_v2 <> PSt def
R13146:13149 project.commands <> CSeq constr
R13151:13152 project.assertions_v2 <> PS def
R13155:13159 project.commands <> CAtom constr
R13161:13162 project.assertions_v2 <> PS def
R13165:13171 project.commands <> CAssume constr
R13173:13174 project.assertions_v2 <> PS def
R13185:13186 project.assertions_v2 <> st:139 var
R13110:13112 project.commands <> bop proj
R13114:13115 project.assertions_v2 <> PS def
R13117:13121 project.commands <> state def
R13277:13301 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R13277:13301 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R13329:13353 project.commands <> compatible_ceval_plus_rev thm
R13329:13353 project.commands <> compatible_ceval_plus_rev thm
R13329:13353 project.commands <> compatible_ceval_plus_rev thm
R13424:13428 project.commands <> ceval def
R13430:13431 project.assertions_v2 <> PS def
R13433:13435 project.assertions_v2 <> PSt def
R13438:13441 project.commands <> CSeq constr
R13443:13444 project.assertions_v2 <> PS def
R13447:13451 project.commands <> CAtom constr
R13453:13454 project.assertions_v2 <> PS def
R13457:13463 project.commands <> CAssume constr
R13465:13466 project.assertions_v2 <> PS def
R13424:13428 project.commands <> ceval def
R13430:13431 project.assertions_v2 <> PS def
R13433:13435 project.assertions_v2 <> PSt def
R13438:13441 project.commands <> CSeq constr
R13443:13444 project.assertions_v2 <> PS def
R13447:13451 project.commands <> CAtom constr
R13453:13454 project.assertions_v2 <> PS def
R13457:13463 project.commands <> CAssume constr
R13465:13466 project.assertions_v2 <> PS def
R13499:13503 project.commands <> ceval def
R13505:13506 project.assertions_v2 <> PS def
R13508:13510 project.assertions_v2 <> PSt def
R13513:13516 project.commands <> CSeq constr
R13518:13519 project.assertions_v2 <> PS def
R13522:13526 project.commands <> CAtom constr
R13528:13529 project.assertions_v2 <> PS def
R13532:13538 project.commands <> CAssume constr
R13540:13541 project.assertions_v2 <> PS def
R13499:13503 project.commands <> ceval def
R13505:13506 project.assertions_v2 <> PS def
R13508:13510 project.assertions_v2 <> PSt def
R13513:13516 project.commands <> CSeq constr
R13518:13519 project.assertions_v2 <> PS def
R13522:13526 project.commands <> CAtom constr
R13528:13529 project.assertions_v2 <> PS def
R13532:13538 project.commands <> CAssume constr
R13540:13541 project.assertions_v2 <> PS def
R13577:13590 project.commands <> preserve_bind3 proj
R13592:13593 project.assertions_v2 <> PS def
R13595:13597 project.assertions_v2 <> PSt def
R13599:13603 project.commands <> state def
R13605:13609 project.commands <> state def
R13577:13590 project.commands <> preserve_bind3 proj
R13592:13593 project.assertions_v2 <> PS def
R13595:13597 project.assertions_v2 <> PSt def
R13599:13603 project.commands <> state def
R13605:13609 project.commands <> state def
R13693:13700 project.assertions_v2 <> ap_union thm
R13693:13700 project.assertions_v2 <> ap_union thm
R13693:13700 project.assertions_v2 <> ap_union thm
R13749:13771 project.assertions_v2 <> assume_inhabited_or_not prfax
R13749:13771 project.assertions_v2 <> assume_inhabited_or_not prfax
R13802:13824 project.assertions_v2 <> assume_inhabited_or_not prfax
R13802:13824 project.assertions_v2 <> assume_inhabited_or_not prfax
R13854:13873 project.assertions_v2 <> seq_inhabited_or_not thm
R13878:13882 project.commands <> CAtom constr
R13884:13885 project.assertions_v2 <> PS def
R13888:13894 project.commands <> CAssume constr
R13896:13897 project.assertions_v2 <> PS def
R13854:13873 project.assertions_v2 <> seq_inhabited_or_not thm
R13878:13882 project.commands <> CAtom constr
R13884:13885 project.assertions_v2 <> PS def
R13888:13894 project.commands <> CAssume constr
R13896:13897 project.assertions_v2 <> PS def
R13955:13974 project.assertions_v2 <> seq_inhabited_or_not thm
R13979:13983 project.commands <> CAtom constr
R13985:13986 project.assertions_v2 <> PS def
R13989:13995 project.commands <> CAssume constr
R13997:13998 project.assertions_v2 <> PS def
R13955:13974 project.assertions_v2 <> seq_inhabited_or_not thm
R13979:13983 project.commands <> CAtom constr
R13985:13986 project.assertions_v2 <> PS def
R13989:13995 project.commands <> CAssume constr
R13997:13998 project.assertions_v2 <> PS def
R14118:14129 Coq.Sets.Ensembles <> Union_introl constr
R14118:14129 Coq.Sets.Ensembles <> Union_introl constr
R14221:14232 Coq.Sets.Ensembles <> Union_intror constr
R14221:14232 Coq.Sets.Ensembles <> Union_intror constr
R14267:14269 Coq.Init.Logic <> not def
R14333:14335 Coq.Init.Logic <> not def
R14350:14364 Coq.Sets.Ensembles <> Inhabited_intro constr
R14350:14364 Coq.Sets.Ensembles <> Inhabited_intro constr
R14422:14424 Coq.Init.Logic <> not def
R14439:14453 Coq.Sets.Ensembles <> Inhabited_intro constr
R14439:14453 Coq.Sets.Ensembles <> Inhabited_intro constr
R14521:14543 project.assertions_v2 <> assume_inhabited_or_not prfax
R14521:14543 project.assertions_v2 <> assume_inhabited_or_not prfax
R14568:14574 project.examples <> apply_f def
R14597:14598 Coq.Sets.Ensembles <> In def
R14668:14679 Coq.Sets.Ensembles <> In_singleton constr
R14668:14679 Coq.Sets.Ensembles <> In_singleton constr
prf 14697:14715 <> not_inhabited_empty
binder 14727:14727 <> A:140
R14742:14749 Coq.Sets.Ensembles <> Ensemble def
R14751:14751 project.assertions_v2 <> A:140 var
binder 14738:14738 <> U:141
R14776:14779 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14757:14759 Coq.Init.Logic <> not def
R14762:14770 Coq.Sets.Ensembles <> Inhabited ind
R14774:14774 project.assertions_v2 <> U:141 var
R14772:14772 project.assertions_v2 <> A:140 var
R14781:14783 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14780:14780 project.assertions_v2 <> U:141 var
R14784:14792 Coq.Sets.Ensembles <> Empty_set ind
R14794:14794 project.assertions_v2 <> A:140 var
R14820:14843 Coq.Sets.Ensembles <> Extensionality_Ensembles prfax
R14820:14843 Coq.Sets.Ensembles <> Extensionality_Ensembles prfax
R14853:14860 Coq.Sets.Ensembles <> Same_set def
R14881:14888 Coq.Sets.Ensembles <> Included def
R14906:14908 Coq.Init.Logic <> not def
R14973:14980 Coq.Sets.Ensembles <> Included def
R14998:15000 Coq.Init.Logic <> not def
R15015:15016 Coq.Sets.Ensembles <> In def
prf 15053:15071 <> inhabited_not_empty
binder 15083:15083 <> A:142
R15098:15105 Coq.Sets.Ensembles <> Ensemble def
R15107:15107 project.assertions_v2 <> A:142 var
binder 15094:15094 <> U:143
R15126:15129 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15113:15121 Coq.Sets.Ensembles <> Inhabited ind
R15125:15125 project.assertions_v2 <> U:143 var
R15123:15123 project.assertions_v2 <> A:142 var
R15131:15134 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R15130:15130 project.assertions_v2 <> U:143 var
R15135:15143 Coq.Sets.Ensembles <> Empty_set ind
R15145:15145 project.assertions_v2 <> A:142 var
R15172:15174 Coq.Init.Logic <> not def
prf 15270:15283 <> OL_subsumes_HL
R15306:15309 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15301:15305 project.commands <> state def
binder 15295:15295 <> P:144
binder 15297:15297 <> Q:145
R15321:15323 project.commands <> com ind
R15325:15326 project.assertions_v2 <> PS def
binder 15317:15317 <> c:146
R15350:15354 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R15332:15343 project.assertions_v2 <> hoare_triple def
R15345:15345 project.assertions_v2 <> P:144 var
R15347:15347 project.assertions_v2 <> c:146 var
R15349:15349 project.assertions_v2 <> Q:145 var
R15355:15356 project.assertions_v2 <> pc def
R15358:15359 project.assertions_v2 <> PS def
R15361:15363 project.assertions_v2 <> PSt def
R15366:15380 project.assertions_v2 <> atomic_powerset def
R15382:15382 project.assertions_v2 <> P:144 var
R15385:15385 project.assertions_v2 <> c:146 var
R15388:15402 project.assertions_v2 <> atomic_powerset def
R15404:15404 project.assertions_v2 <> Q:145 var
R15432:15433 project.assertions_v2 <> pc def
R15443:15456 project.assertions_v2 <> outcome_triple def
R15466:15477 project.assertions_v2 <> hoare_triple def
R15487:15501 project.assertions_v2 <> atomic_powerset def
R15530:15533 project.assertions_v2 <> OrOC def
R15543:15554 project.assertions_v2 <> ceval_lifted def
R15590:15606 project.assertions_v2 <> apply_f_inhabited thm
R15590:15606 project.assertions_v2 <> apply_f_inhabited thm
R15690:15696 project.examples <> apply_f def
R15812:15817 project.assertions_v2 <> T_plus def
R15827:15845 project.assertions_v2 <> not_inhabited_empty thm
R15827:15845 project.assertions_v2 <> not_inhabited_empty thm
R15905:15919 project.assertions_v2 <> atomic_powerset def
R15924:15932 Coq.Sets.Ensembles <> Singleton ind
R15934:15938 project.commands <> state def
R15905:15919 project.assertions_v2 <> atomic_powerset def
R15924:15932 Coq.Sets.Ensembles <> Singleton ind
R15934:15938 project.commands <> state def
R15961:15975 project.assertions_v2 <> atomic_powerset def
R15993:15994 Coq.Sets.Ensembles <> In def
R16003:16011 Coq.Sets.Ensembles <> Singleton ind
R16013:16017 project.commands <> state def
R15996:16000 project.commands <> state def
R15993:15994 Coq.Sets.Ensembles <> In def
R16003:16011 Coq.Sets.Ensembles <> Singleton ind
R16013:16017 project.commands <> state def
R15996:16000 project.commands <> state def
R16045:16056 Coq.Sets.Ensembles <> In_singleton constr
R16045:16056 Coq.Sets.Ensembles <> In_singleton constr
R16067:16081 Coq.Sets.Ensembles <> Inhabited_intro constr
R16067:16081 Coq.Sets.Ensembles <> Inhabited_intro constr
R16179:16182 project.assertions_v2 <> OrOC def
R16283:16284 Coq.Sets.Ensembles <> In def
R16294:16300 project.examples <> apply_f def
R16333:16344 Coq.Sets.Ensembles <> In_singleton constr
R16333:16344 Coq.Sets.Ensembles <> In_singleton constr
R16407:16412 project.assertions_v2 <> T_plus def
R16441:16447 project.examples <> apply_f def
R16471:16471 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16489:16492 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16472:16476 project.commands <> ceval def
R16478:16479 project.assertions_v2 <> PS def
R16481:16483 project.assertions_v2 <> PSt def
R16493:16501 Coq.Sets.Ensembles <> Empty_set ind
R16503:16507 project.commands <> state def
R16471:16471 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16489:16492 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16472:16476 project.commands <> ceval def
R16478:16479 project.assertions_v2 <> PS def
R16481:16483 project.assertions_v2 <> PSt def
R16493:16501 Coq.Sets.Ensembles <> Empty_set ind
R16503:16507 project.commands <> state def
R16541:16564 Coq.Sets.Ensembles <> Extensionality_Ensembles prfax
R16541:16564 Coq.Sets.Ensembles <> Extensionality_Ensembles prfax
R16574:16581 Coq.Sets.Ensembles <> Same_set def
R16608:16615 Coq.Sets.Ensembles <> Included def
R16633:16634 Coq.Sets.Ensembles <> In def
R16661:16672 Coq.Sets.Ensembles <> In_singleton constr
R16661:16672 Coq.Sets.Ensembles <> In_singleton constr
R16692:16693 Coq.Sets.Ensembles <> In def
R16729:16736 Coq.Sets.Ensembles <> Included def
R16754:16755 Coq.Sets.Ensembles <> In def
R16822:16823 Coq.Sets.Ensembles <> In def
R16856:16870 Coq.Sets.Ensembles <> Inhabited_intro constr
R16856:16870 Coq.Sets.Ensembles <> Inhabited_intro constr
R16885:16903 project.assertions_v2 <> inhabited_not_empty thm
R16885:16903 project.assertions_v2 <> inhabited_not_empty thm
def 17281:17285 <> under
R17293:17309 project.commands <> exec_model_consts rec
binder 17288:17289 <> Ex:147
R17319:17335 project.commands <> exec_model_theory rec
R17337:17338 project.assertions_v2 <> Ex:147 var
binder 17313:17315 <> Ext:148
R17348:17356 project.assertions_v2 <> assertion def
R17358:17359 project.assertions_v2 <> Ex:147 var
binder 17344:17344 <> P:149
R17367:17369 project.commands <> com ind
R17371:17372 project.assertions_v2 <> Ex:147 var
binder 17363:17363 <> c:150
R17380:17388 project.assertions_v2 <> assertion def
R17390:17391 project.assertions_v2 <> Ex:147 var
binder 17376:17376 <> Q:151
R17399:17412 project.assertions_v2 <> outcome_triple def
R17414:17415 project.assertions_v2 <> Ex:147 var
R17417:17419 project.assertions_v2 <> Ext:148 var
R17421:17421 project.assertions_v2 <> P:149 var
R17423:17423 project.assertions_v2 <> c:150 var
R17426:17430 project.assertions_v2 <> OPlus def
R17432:17433 project.assertions_v2 <> Ex:147 var
R17435:17435 project.assertions_v2 <> Q:151 var
R17438:17440 project.assertions_v2 <> Top def
R17442:17443 project.assertions_v2 <> Ex:147 var
def 17460:17472 <> lisbon_triple
R17484:17487 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17479:17483 project.commands <> state def
binder 17475:17475 <> P:152
R17499:17501 project.commands <> com ind
R17503:17504 project.assertions_v2 <> PS def
binder 17495:17495 <> c:153
R17517:17520 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17512:17516 project.commands <> state def
binder 17508:17508 <> Q:154
binder 17539:17540 <> st:155
R17551:17554 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17545:17545 project.assertions_v2 <> P:152 var
R17548:17549 project.assertions_v2 <> st:155 var
R17555:17561 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R17565:17566 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 17562:17564 <> st':156
R17599:17602 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17567:17568 Coq.Sets.Ensembles <> In def
R17577:17581 project.commands <> ceval def
R17583:17584 project.assertions_v2 <> PS def
R17586:17588 project.assertions_v2 <> PSt def
R17590:17590 project.assertions_v2 <> c:153 var
R17592:17593 project.assertions_v2 <> st:155 var
R17596:17598 project.assertions_v2 <> st':156 var
R17570:17574 project.commands <> state def
R17603:17603 project.assertions_v2 <> Q:154 var
R17606:17608 project.assertions_v2 <> st':156 var
prf 17620:17631 <> ceval_linear
R17651:17651 project.commands <> M proj
R17653:17654 project.assertions_v2 <> PS def
R17656:17660 project.commands <> state def
binder 17643:17643 <> X:157
binder 17645:17645 <> Y:158
binder 17647:17647 <> Z:159
R17668:17670 project.commands <> com ind
R17672:17673 project.assertions_v2 <> PS def
binder 17664:17664 <> c:160
binder 17677:17677 <> H:161
R17702:17708 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17698:17700 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17683:17687 Coq.Sets.Ensembles <> Union ind
R17695:17695 project.assertions_v2 <> X:157 var
R17697:17697 project.assertions_v2 <> Y:158 var
R17689:17693 project.commands <> state def
R17701:17701 project.assertions_v2 <> Z:159 var
R17780:17784 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17709:17710 project.partial <> ap def
R17779:17779 project.assertions_v2 <> H:161 var
R17754:17765 project.assertions_v2 <> ceval_lifted def
R17767:17768 project.assertions_v2 <> PS def
R17770:17772 project.assertions_v2 <> PSt def
R17774:17774 project.assertions_v2 <> c:160 var
R17776:17776 project.assertions_v2 <> Y:158 var
R17728:17739 project.assertions_v2 <> ceval_lifted def
R17741:17742 project.assertions_v2 <> PS def
R17744:17746 project.assertions_v2 <> PSt def
R17748:17748 project.assertions_v2 <> c:160 var
R17750:17750 project.assertions_v2 <> X:157 var
R17713:17715 project.commands <> bop proj
R17717:17718 project.assertions_v2 <> PS def
R17720:17724 project.commands <> state def
R17785:17796 project.assertions_v2 <> ceval_lifted def
R17798:17799 project.assertions_v2 <> PS def
R17801:17803 project.assertions_v2 <> PSt def
R17805:17805 project.assertions_v2 <> c:160 var
R17807:17807 project.assertions_v2 <> Z:159 var
R17834:17845 project.assertions_v2 <> ceval_lifted def
R17873:17879 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R17881:17882 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 17880:17880 <> H:162
R17906:17908 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17883:17884 project.partial <> ap def
R17905:17905 project.assertions_v2 <> H:162 var
R17887:17889 project.commands <> bop proj
R17891:17892 project.assertions_v2 <> PS def
R17894:17898 project.commands <> state def
R17909:17913 Coq.Sets.Ensembles <> Union ind
R17915:17919 project.commands <> state def
R17873:17879 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R17881:17882 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 17880:17880 <> H:163
R17906:17908 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17883:17884 project.partial <> ap def
R17905:17905 project.assertions_v2 <> H:163 var
R17887:17889 project.commands <> bop proj
R17891:17892 project.assertions_v2 <> PS def
R17894:17898 project.commands <> state def
R17909:17913 Coq.Sets.Ensembles <> Union ind
R17915:17919 project.commands <> state def
R17999:18005 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R18007:18008 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 18006:18006 <> H:164
R18059:18082 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18009:18012 project.commands <> bind proj
R18044:18048 project.commands <> ceval def
R18050:18051 project.assertions_v2 <> PS def
R18053:18055 project.assertions_v2 <> PSt def
R18018:18019 project.partial <> ap def
R18022:18024 project.commands <> bop proj
R18026:18027 project.assertions_v2 <> PS def
R18029:18033 project.commands <> state def
R18014:18015 project.assertions_v2 <> PS def
R18083:18084 project.partial <> ap def
R18180:18180 project.assertions_v2 <> H:164 var
R18152:18155 project.commands <> bind proj
R18163:18167 project.commands <> ceval def
R18169:18170 project.assertions_v2 <> PS def
R18172:18174 project.assertions_v2 <> PSt def
R18157:18158 project.assertions_v2 <> PS def
R18102:18105 project.commands <> bind proj
R18113:18117 project.commands <> ceval def
R18119:18120 project.assertions_v2 <> PS def
R18122:18124 project.assertions_v2 <> PSt def
R18107:18108 project.assertions_v2 <> PS def
R18087:18089 project.commands <> bop proj
R18091:18092 project.assertions_v2 <> PS def
R18094:18098 project.commands <> state def
R17999:18005 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R18007:18008 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 18006:18006 <> H:165
R18059:18082 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18009:18012 project.commands <> bind proj
R18044:18048 project.commands <> ceval def
R18050:18051 project.assertions_v2 <> PS def
R18053:18055 project.assertions_v2 <> PSt def
R18018:18019 project.partial <> ap def
R18022:18024 project.commands <> bop proj
R18026:18027 project.assertions_v2 <> PS def
R18029:18033 project.commands <> state def
R18014:18015 project.assertions_v2 <> PS def
R18083:18084 project.partial <> ap def
R18180:18180 project.assertions_v2 <> H:165 var
R18152:18155 project.commands <> bind proj
R18163:18167 project.commands <> ceval def
R18169:18170 project.assertions_v2 <> PS def
R18172:18174 project.assertions_v2 <> PSt def
R18157:18158 project.assertions_v2 <> PS def
R18102:18105 project.commands <> bind proj
R18113:18117 project.commands <> ceval def
R18119:18120 project.assertions_v2 <> PS def
R18122:18124 project.assertions_v2 <> PSt def
R18107:18108 project.assertions_v2 <> PS def
R18087:18089 project.commands <> bop proj
R18091:18092 project.assertions_v2 <> PS def
R18094:18098 project.commands <> state def
R18197:18210 project.commands <> preserve_bind1 proj
R18212:18213 project.assertions_v2 <> PS def
R18215:18217 project.assertions_v2 <> PSt def
R18197:18210 project.commands <> preserve_bind1 proj
R18212:18213 project.assertions_v2 <> PS def
R18215:18217 project.assertions_v2 <> PSt def
R18291:18306 project.examples <> powerset_partial def
prf 18329:18350 <> exists_satisfies_under
R18366:18373 Coq.Sets.Ensembles <> Ensemble def
R18375:18379 project.commands <> state def
binder 18362:18362 <> X:166
R18392:18395 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18387:18391 project.commands <> state def
binder 18383:18383 <> P:167
R18444:18448 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18405:18409 project.assertions_v2 <> OPlus def
R18411:18412 project.assertions_v2 <> PS def
R18415:18429 project.assertions_v2 <> atomic_powerset def
R18431:18431 project.assertions_v2 <> P:167 var
R18435:18437 project.assertions_v2 <> Top def
R18439:18440 project.assertions_v2 <> PS def
R18443:18443 project.assertions_v2 <> X:166 var
R18449:18455 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R18457:18458 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 18456:18456 <> x:168
R18471:18474 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R18459:18460 Coq.Sets.Ensembles <> In def
R18468:18468 project.assertions_v2 <> X:166 var
R18470:18470 project.assertions_v2 <> x:168 var
R18462:18466 project.commands <> state def
R18475:18475 project.assertions_v2 <> P:167 var
R18477:18477 project.assertions_v2 <> x:168 var
R18523:18527 project.assertions_v2 <> OPlus def
R18614:18628 project.assertions_v2 <> atomic_powerset def
R18693:18695 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18696:18700 Coq.Sets.Ensembles <> Union ind
R18702:18706 project.commands <> state def
R18693:18695 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18696:18700 Coq.Sets.Ensembles <> Union ind
R18702:18706 project.commands <> state def
R18783:18794 Coq.Sets.Ensembles <> Union_introl constr
R18783:18794 Coq.Sets.Ensembles <> Union_introl constr
R18872:18876 project.assertions_v2 <> OPlus def
R18894:18902 Coq.Sets.Ensembles <> Singleton ind
R18904:18908 project.commands <> state def
R18894:18902 Coq.Sets.Ensembles <> Singleton ind
R18904:18908 project.commands <> state def
R18946:18946 Coq.Init.Logic <> I constr
R18946:18946 Coq.Init.Logic <> I constr
R18993:18995 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18970:18971 project.partial <> ap def
R18992:18992 Coq.Init.Logic <> I constr
R18974:18976 project.commands <> bop proj
R18978:18979 project.assertions_v2 <> PS def
R18981:18985 project.commands <> state def
R18996:19000 Coq.Sets.Ensembles <> Union ind
R19002:19006 project.commands <> state def
R18993:18995 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18970:18971 project.partial <> ap def
R18992:18992 Coq.Init.Logic <> I constr
R18974:18976 project.commands <> bop proj
R18978:18979 project.assertions_v2 <> PS def
R18981:18985 project.commands <> state def
R18996:19000 Coq.Sets.Ensembles <> Union ind
R19002:19006 project.commands <> state def
R19070:19093 Coq.Sets.Ensembles <> Extensionality_Ensembles prfax
R19070:19093 Coq.Sets.Ensembles <> Extensionality_Ensembles prfax
R19103:19110 Coq.Sets.Ensembles <> Same_set def
R19120:19127 Coq.Sets.Ensembles <> Included def
R19250:19261 Coq.Sets.Ensembles <> Union_intror constr
R19250:19261 Coq.Sets.Ensembles <> Union_intror constr
R19294:19308 project.assertions_v2 <> atomic_powerset def
R19334:19335 Coq.Sets.Ensembles <> In def
R19337:19341 project.commands <> state def
R19334:19335 Coq.Sets.Ensembles <> In def
R19337:19341 project.commands <> state def
R19364:19375 Coq.Sets.Ensembles <> In_singleton constr
R19364:19375 Coq.Sets.Ensembles <> In_singleton constr
R19395:19409 Coq.Sets.Ensembles <> Inhabited_intro constr
R19395:19409 Coq.Sets.Ensembles <> Inhabited_intro constr
R19505:19507 project.assertions_v2 <> Top def
prf 19530:19541 <> PS_bop_union
R19559:19566 Coq.Sets.Ensembles <> Ensemble def
R19568:19572 project.commands <> state def
binder 19553:19553 <> X:169
binder 19555:19555 <> Y:170
binder 19576:19576 <> H:171
R19605:19607 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19582:19583 project.partial <> ap def
R19604:19604 project.assertions_v2 <> H:171 var
R19602:19602 project.assertions_v2 <> Y:170 var
R19600:19600 project.assertions_v2 <> X:169 var
R19586:19588 project.commands <> bop proj
R19590:19591 project.assertions_v2 <> PS def
R19593:19597 project.commands <> state def
R19608:19612 Coq.Sets.Ensembles <> Union ind
R19620:19620 project.assertions_v2 <> X:169 var
R19622:19622 project.assertions_v2 <> Y:170 var
R19614:19618 project.commands <> state def
prf 19676:19692 <> apply_f_singleton
R19709:19713 project.commands <> state def
binder 19704:19705 <> st:172
R19726:19729 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19721:19725 project.commands <> state def
R19730:19737 Coq.Sets.Ensembles <> Ensemble def
R19739:19743 project.commands <> state def
binder 19717:19717 <> f:173
R19779:19781 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19749:19755 project.examples <> apply_f def
R19778:19778 project.assertions_v2 <> f:173 var
R19758:19766 Coq.Sets.Ensembles <> Singleton ind
R19774:19775 project.assertions_v2 <> st:172 var
R19768:19772 project.commands <> state def
R19782:19782 project.assertions_v2 <> f:173 var
R19784:19785 project.assertions_v2 <> st:172 var
R19811:19834 Coq.Sets.Ensembles <> Extensionality_Ensembles prfax
R19811:19834 Coq.Sets.Ensembles <> Extensionality_Ensembles prfax
R19844:19851 Coq.Sets.Ensembles <> Same_set def
R19861:19868 Coq.Sets.Ensembles <> Included def
R19880:19886 project.examples <> apply_f def
R19989:20000 Coq.Sets.Ensembles <> In_singleton constr
R19989:20000 Coq.Sets.Ensembles <> In_singleton constr
prf 20027:20040 <> OL_subsumes_LL
R20063:20066 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20058:20062 project.commands <> state def
binder 20052:20052 <> P:174
binder 20054:20054 <> Q:175
R20078:20080 project.commands <> com ind
R20082:20083 project.assertions_v2 <> PS def
binder 20074:20074 <> c:176
R20108:20112 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R20089:20101 project.assertions_v2 <> lisbon_triple def
R20103:20103 project.assertions_v2 <> P:174 var
R20105:20105 project.assertions_v2 <> c:176 var
R20107:20107 project.assertions_v2 <> Q:175 var
R20113:20117 project.assertions_v2 <> under def
R20119:20120 project.assertions_v2 <> PS def
R20122:20124 project.assertions_v2 <> PSt def
R20127:20141 project.assertions_v2 <> atomic_powerset def
R20143:20143 project.assertions_v2 <> P:174 var
R20146:20146 project.assertions_v2 <> c:176 var
R20149:20163 project.assertions_v2 <> atomic_powerset def
R20165:20165 project.assertions_v2 <> Q:175 var
R20193:20197 project.assertions_v2 <> under def
R20207:20220 project.assertions_v2 <> outcome_triple def
R20230:20242 project.assertions_v2 <> lisbon_triple def
R20402:20410 Coq.Sets.Ensembles <> Singleton ind
R20412:20416 project.commands <> state def
R20402:20410 Coq.Sets.Ensembles <> Singleton ind
R20412:20416 project.commands <> state def
R20437:20458 project.assertions_v2 <> exists_satisfies_under thm
R20437:20458 project.assertions_v2 <> exists_satisfies_under thm
R20508:20510 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20493:20497 Coq.Sets.Ensembles <> Union ind
R20499:20503 project.commands <> state def
R20508:20510 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20493:20497 Coq.Sets.Ensembles <> Union ind
R20499:20503 project.commands <> state def
R20538:20561 Coq.Sets.Ensembles <> Extensionality_Ensembles prfax
R20538:20561 Coq.Sets.Ensembles <> Extensionality_Ensembles prfax
R20571:20578 Coq.Sets.Ensembles <> Same_set def
R20588:20595 Coq.Sets.Ensembles <> Included def
R20710:20721 Coq.Sets.Ensembles <> Union_intror constr
R20710:20721 Coq.Sets.Ensembles <> Union_intror constr
R20821:20838 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20862:20862 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20750:20751 project.partial <> ap def
R20820:20820 Coq.Init.Logic <> I constr
R20795:20806 project.assertions_v2 <> ceval_lifted def
R20808:20809 project.assertions_v2 <> PS def
R20811:20813 project.assertions_v2 <> PSt def
R20769:20780 project.assertions_v2 <> ceval_lifted def
R20782:20783 project.assertions_v2 <> PS def
R20785:20787 project.assertions_v2 <> PSt def
R20754:20756 project.commands <> bop proj
R20758:20759 project.assertions_v2 <> PS def
R20761:20765 project.commands <> state def
R20839:20850 project.assertions_v2 <> ceval_lifted def
R20852:20853 project.assertions_v2 <> PS def
R20855:20857 project.assertions_v2 <> PSt def
R20821:20838 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20862:20862 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20750:20751 project.partial <> ap def
R20820:20820 Coq.Init.Logic <> I constr
R20795:20806 project.assertions_v2 <> ceval_lifted def
R20808:20809 project.assertions_v2 <> PS def
R20811:20813 project.assertions_v2 <> PSt def
R20769:20780 project.assertions_v2 <> ceval_lifted def
R20782:20783 project.assertions_v2 <> PS def
R20785:20787 project.assertions_v2 <> PSt def
R20754:20756 project.commands <> bop proj
R20758:20759 project.assertions_v2 <> PS def
R20761:20765 project.commands <> state def
R20839:20850 project.assertions_v2 <> ceval_lifted def
R20852:20853 project.assertions_v2 <> PS def
R20855:20857 project.assertions_v2 <> PSt def
R20882:20893 project.assertions_v2 <> ceval_linear thm
R20882:20893 project.assertions_v2 <> ceval_linear thm
R20959:20961 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20943:20947 project.commands <> ceval def
R20949:20950 project.assertions_v2 <> PS def
R20952:20954 project.assertions_v2 <> PSt def
R20962:20973 project.assertions_v2 <> ceval_lifted def
R20975:20976 project.assertions_v2 <> PS def
R20978:20980 project.assertions_v2 <> PSt def
R20959:20961 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20943:20947 project.commands <> ceval def
R20949:20950 project.assertions_v2 <> PS def
R20952:20954 project.assertions_v2 <> PSt def
R20962:20973 project.assertions_v2 <> ceval_lifted def
R20975:20976 project.assertions_v2 <> PS def
R20978:20980 project.assertions_v2 <> PSt def
R21014:21030 project.assertions_v2 <> apply_f_singleton thm
R21014:21030 project.assertions_v2 <> apply_f_singleton thm
R21014:21030 project.assertions_v2 <> apply_f_singleton thm
R21092:21103 project.assertions_v2 <> PS_bop_union thm
R21092:21103 project.assertions_v2 <> PS_bop_union thm
R21092:21103 project.assertions_v2 <> PS_bop_union thm
R21112:21123 Coq.Sets.Ensembles <> Union_introl constr
R21112:21123 Coq.Sets.Ensembles <> Union_introl constr
R21198:21206 Coq.Sets.Ensembles <> Singleton ind
R21208:21212 project.commands <> state def
R21198:21206 Coq.Sets.Ensembles <> Singleton ind
R21208:21212 project.commands <> state def
R21254:21268 project.assertions_v2 <> atomic_powerset def
R21254:21268 project.assertions_v2 <> atomic_powerset def
R21291:21305 project.assertions_v2 <> atomic_powerset def
R21323:21324 Coq.Sets.Ensembles <> In def
R21326:21330 project.commands <> state def
R21323:21324 Coq.Sets.Ensembles <> In def
R21326:21330 project.commands <> state def
R21361:21372 Coq.Sets.Ensembles <> In_singleton constr
R21361:21372 Coq.Sets.Ensembles <> In_singleton constr
R21381:21395 Coq.Sets.Ensembles <> Inhabited_intro constr
R21381:21395 Coq.Sets.Ensembles <> Inhabited_intro constr
R21503:21524 project.assertions_v2 <> exists_satisfies_under thm
R21503:21524 project.assertions_v2 <> exists_satisfies_under thm
R21598:21614 project.assertions_v2 <> apply_f_singleton thm
R21598:21614 project.assertions_v2 <> apply_f_singleton thm
R21598:21614 project.assertions_v2 <> apply_f_singleton thm
R21624:21635 project.assertions_v2 <> ceval_lifted def
